<!DOCTYPE html>
<!--[if lt IE 7]>      <html class='no-js lt-ie9 lt-ie8 lt-ie7'> <![endif]-->
<!--[if IE 7]>         <html class='no-js lt-ie9 lt-ie8'> <![endif]-->
<!--[if IE 8]>         <html class='no-js lt-ie9'> <![endif]-->
<!--[if gt IE 8]><!--> <html class='no-js'> <!--<![endif]-->
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta charset='utf-8'>
    <meta http-equiv='X-UA-Compatible' content='IE=edge,chrome=1'>
    <title>{{title}}</title>
    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
    <meta name="title" content="{{title}}" />
    <meta name="description" content="{{description}}" />
    <link rel="shortcut icon" href="favicon.ico" type="image/x-icon" />

    <!-- Material Design fonts -->
    <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Roboto:300,400,500,700">
    <link rel="stylesheet" type="text/css" href="bclibs/material-icons/material-icons.css">
    <link rel="stylesheet" type="text/css" href="bclibs/material-icons/material-icons-addon.css">
    <link rel="stylesheet" type="text/css" href="bclibs/pixeladmin/css/pixeladmin.min.css">
    <link rel="stylesheet" type="text/css" href="bclibs/pixeladmin/css/clean.min.css">

    <link href='css/bc.css' rel='stylesheet' media='screen'>
    <noscript id="deferred-styles">
    {{#each pluginCssResources}}
    <link href='{{contextPath}}/{{.}}' rel='stylesheet' media='screen'>
    {{/each}}
    </noscript>

    <script src='libs/@babel/polyfill/dist/polyfill.min.js'></script>
    <script type="text/javascript" src="bclibs/canvg/rgbcolor.js"></script>
    <script type="text/javascript" src="bclibs/canvg/StackBlur.js"></script>
    <script type="text/javascript" src="bclibs/canvg/canvg.js"></script>
    <script src='libs/jspdf/dist/jspdf.min.js'></script>
    <script src='jsc/ontologyConstants.js'></script>
    <script src='jsc/require.config.js'></script>

    <script>
    (function() {
      var MAX_BUILD_LENGTH = 5,
          buildNumber = '${buildNumber}',
          buildTokenReplaced = buildNumber !== ('${' + 'buildNumber' + '}'),
          versionParameter = buildTokenReplaced ? buildNumber : Date.now();

      if (versionParameter.length > MAX_BUILD_LENGTH && buildTokenReplaced) {
        versionParameter = versionParameter.substring(0, MAX_BUILD_LENGTH)
      }

      require.urlArgs = window.bcCacheBreaker = "bc_v=" + versionParameter;
      window.bcEnvironment = { dev: {{devMode}}, prod: !{{devMode}} };
      if(bcEnvironment.dev) {
          removeMinification('react', 'react-dom', 'create-react-class', 'react-redux', 'redux', 'react-transition-group', 'react-proptypes-dev');
      }

      window.bcPluginResources = {
        beforeAuth: [
        {{#each pluginJsResourcesBeforeAuth}}  '{{contextPath}}{{.}}'{{#unless @last}},{{/unless}}
        {{/each}}],
        afterAuth: [
        {{#each pluginJsResourcesAfterAuth}}  '{{contextPath}}{{.}}'{{#unless @last}},{{/unless}}
        {{/each}}],
        webWorker: [
        {{#each pluginJsResourcesWebWorker}}  '{{contextPath}}{{.}}'{{#unless @last}},{{/unless}}
        {{/each}}]
      };

        var loadDeferredStyles = function() {
            var addStylesNode = document.getElementById("deferred-styles");
            if (addStylesNode) {
                var replacement = document.createElement("div");
                replacement.innerHTML = addStylesNode.textContent;
                document.body.appendChild(replacement);
                addStylesNode.parentElement.removeChild(addStylesNode);
            }
        };
        document.addEventListener('DOMContentLoaded', loadDeferredStyles);

        function removeMinification() {
            for (var i = 0; i < arguments.length; i++) {
                var name = arguments[i];
                if (name in require.paths) {
                    if (name === 'react' || name === 'react-dom') {
                        require.paths[name] = require.paths[name].replace(/production\.min$/, 'development');
                    } else {
                        require.paths[name] = require.paths[name].replace(/\.min$/, '');
                    }
                } else console.warn('No path found: ', name)
            }
        }
    })();
  </script>
  <script data-main="bc" src='libs/requirejs/require.js'></script>
</head>
<body>
{{#if showVersionComments }}
<!-- Version: ${project.version} -->
<!-- SCM URL: ${project.scm.url} -->
<!-- Git SHA-1: ${buildNumber} -->
<!-- Build Timestamp: ${build.timestamp.formatted} -->
{{/if}}
<div id='app'></div>
<div id='login'></div>

{{! Inline Styles for fast loading of progress immediately after page load }}
<div id="bc-loading-static" style="
    position: absolute; left: 0; right: 0; top: 0; bottom: 0;
    width: 100%;
    height: 100%;
    text-align: center;
    background-color: #21a79c;
    background-repeat: no-repeat;
    background-position: center 0%;
    pointer-events: none;
    font-size: 100%; ">

    <h1 style="position: absolute; top: 50%; width: auto; margin: 0; padding: 0;
                -webkit-transform: translate(-50%, -50%);
                -moz-transform: translate(-50%, -50%);
                -ms-transform: translate(-50%, -50%);
                transform: translate(-50%, -50%);
                color: #888; font-size: 150%; left: 50%; text-shadow: 0 1px 0 white; font-style: italic; width: 8em; ">

      <p style='font-family: Roboto;
                font-size: 25px;
                font-style: normal;
                color: white;
                margin-bottom: 30px;'>Se incarca...</p>

      <div class="progress progress-striped active" style=" margin-top: 0.6em; height: 0.3em; margin-bottom: 0.4em; ">
        <div class="progress-bar progress-bar-warning" style="width: 0.5em; box-shadow: none;"></div>
      </div>
      <span style="position: absolute; left: -2em; right: -2em; text-align: center; font-size: 75%; margin: 0; padding: 0; line-height: 1.1em; color: #fff; font-style: normal; ">&nbsp;</span></h1>
</div>

</body>
</html>

