<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>web-group</artifactId>
        <groupId>io.bigconnect</groupId>
        <version>4.2.1</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <artifactId>tomcat-server</artifactId>
    <packaging>jar</packaging>
    <name>BigConnect Explorer: Tomcat Server</name>
    <description>This project is only here to create a good classpath with the plugins for your IDE</description>

    <properties>
        <!-- Default Tomcat Configuration Properties -->
        <http.port>8888</http.port>
        <https.port>8889</https.port>
        <server.maxIdleTime>60000</server.maxIdleTime>
        <web.basedir>${basedir}/../war</web.basedir>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-tomcat-adapter</artifactId>
            <version>11.0.0</version>
        </dependency>
        <dependency>
            <groupId>io.bigconnect</groupId>
            <artifactId>web-base</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet.api.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.bigconnect</groupId>
            <artifactId>storage-rocksdb</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.bigconnect</groupId>
            <artifactId>storage-accumulo</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.bigconnect</groupId>
            <artifactId>cypher-runtime</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.bouncycastle</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.bigconnect</groupId>
            <artifactId>search-index</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- Groovy is required when BC is configured to use in-process elasticsearch -->
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy</artifactId>
            <version>${groovy.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.weakref</groupId>
            <artifactId>jmxutils</artifactId>
            <version>1.19</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-guice</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>

        <!-- Web Plugins -->
        <dependency>
            <groupId>io.bigconnect</groupId>
            <artifactId>web-product-graph</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.bigconnect</groupId>
            <artifactId>web-product-map</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.bigconnect</groupId>
            <artifactId>web-auth-username-password</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.bigconnect</groupId>
            <artifactId>rest-explorer</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.bigconnect</groupId>
            <artifactId>terms-of-use</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Required DWs -->
        <dependency>
            <groupId>io.bigconnect</groupId>
            <artifactId>dw-mime-type-detector</artifactId>
            <version>${bigconnect.dw.version}</version>
        </dependency>
        <dependency>
            <groupId>io.bigconnect</groupId>
            <artifactId>dw-mime-type-ontology-mapper</artifactId>
            <version>${bigconnect.dw.version}</version>
        </dependency>
        <dependency>
            <groupId>io.bigconnect</groupId>
            <artifactId>av-utils</artifactId>
            <version>${bigconnect.dw.version}</version>
        </dependency>

        <!-- Text DWs -->
        <dependency>
            <groupId>io.bigconnect</groupId>
            <artifactId>dw-text-language-detector</artifactId>
            <version>${bigconnect.dw.version}</version>
        </dependency>
        <dependency>
            <groupId>io.bigconnect</groupId>
            <artifactId>dw-text-common</artifactId>
            <version>${bigconnect.dw.version}</version>
        </dependency>
        <dependency>
            <groupId>io.bigconnect</groupId>
            <artifactId>dw-text-extractor</artifactId>
            <version>${bigconnect.dw.version}</version>
        </dependency>

        <!-- Image DWs -->
        <dependency>
            <groupId>io.bigconnect</groupId>
            <artifactId>dw-image-metadata-extractor</artifactId>
            <version>${bigconnect.dw.version}</version>
        </dependency>

        <!-- Video DWs -->
        <dependency>
            <groupId>io.bigconnect</groupId>
            <artifactId>dw-video-metadata-extractor</artifactId>
            <version>${bigconnect.dw.version}</version>
        </dependency>
        <dependency>
            <groupId>io.bigconnect</groupId>
            <artifactId>dw-video-preview</artifactId>
            <version>${bigconnect.dw.version}</version>
        </dependency>

        <!-- Audio DWs -->
        <dependency>
            <groupId>io.bigconnect</groupId>
            <artifactId>dw-audio-metadata-extractor</artifactId>
            <version>${bigconnect.dw.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>3.13.0</version>
        </dependency>
        <dependency>
            <groupId>org.cache2k</groupId>
            <artifactId>cache2k-api</artifactId>
            <version>${cache2k.version}</version>
        </dependency>
        <dependency>
            <groupId>org.cache2k</groupId>
            <artifactId>cache2k-core</artifactId>
            <version>${cache2k.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-classpath</id>
                        <configuration>
                            <archive>
                                <manifest>
                                    <addClasspath>true</addClasspath>
                                    <mainClass>com.mware.web.TomcatWebServer</mainClass>
                                    <useUniqueVersions>false</useUniqueVersions>
                                </manifest>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>dev-tomcat-run</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${plugin.maven.exec.version}</version>
                        <configuration>
                            <executable>java</executable>
                            <arguments>
                                <argument>-DBIGCONNECT_DIR=${basedir}/..</argument>
                                <argument>-Djava.net.preferIPv4Stack=true</argument>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>com.mware.web.TomcatWebServer</argument>
                                <argument>--webAppDir</argument>
                                <argument>${web.basedir}/src/main/webapp</argument>
                                <argument>--port</argument>
                                <argument>${http.port}</argument>
                                <argument>--httpsPort</argument>
                                <argument>${https.port}</argument>
                                <argument>--keyStorePath</argument>
                                <argument>${basedir}/config/keystore.jks</argument>
                                <argument>--keyStorePassword</argument>
                                <argument>password</argument>
                                <argument>--trustStorePath</argument>
                                <argument>${basedir}/config/truststore.jks</argument>
                                <argument>--trustStorePassword</argument>
                                <argument>password</argument>
                            </arguments>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>compile</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>generate-deps</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                    <overWriteReleases>false</overWriteReleases>
                                    <overWriteSnapshots>false</overWriteSnapshots>
                                    <overWriteIfNewer>true</overWriteIfNewer>
                                    <excludeArtifactIds>
                                        dw-text-analysis,
                                        dw-image-analysis,
                                        dw-video-analysis,
                                        dw-audio-analysis,
                                        google-cloud-vision,
                                        google-cloud-translate,
                                        opencensus-api
                                    </excludeArtifactIds>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
